assetfinder - https://github.com/tomnomnom/assetfinder
amass - https://github.com/OWASP/Amass
certspotter - #curl -s https://certspotter.com/api/v0/certs\?domain\=$url | jq '.[].dns_names[]' | sed 's/"//g' | sed 's/*.//g' | sort -u (set as alias)
sublist3r - https://github.com/aboul3la/Sublist3r
httprobe - https://github.com/tomnomnom/httprobe
waybackurls - https://github.com/tomnomnom/waybackurls
whatweb - https://github.com/urbanadventurer/WhatWeb
nmap - https://nmap.org/download.html
eyewitness - https://github.com/FortyNorthSecurity/EyeWitness

Installation Subfinder:- Open Kali Terminal
$  sudo git clone https://github.com/projectdiscovery/subfinder.git
subfinder -d "your target domain"
sublist3r -d "your target domain"

Installation Amass:- Open Kali Terminal and write these commands
sudo apt-get update
sudo apt-get install amass
amass enum -d "your target domain"

Installation ffuf:- Open Kali Terminal and write this
git clone https://github.com/ffuf/ffuf ; cd ffuf ; go get ; go build
ffuf -w /path/to/wordlist -u https://FUZZ.target

manual testing
1) tools to find end point 
Here I used tool called Arjun
$  arjun -u example.com/login.jsp

2)I want is finding any parameter called ‚Äúgoto‚Äù to get any chance for finding new XSS‚Äôs
$ gau example.com | grep "?goto="

3)I had many domains to test, so I started with the Aquatone tool.endpoint for hxx and redirection

$  cat targets.txt | aquatone
$ waybackurls example.nl > test.txt
$  cat test.txt | grep ‚Äúquery=‚Äù

$ nuclei --list all-parameters.txt -nh -silent -rate-limit 2 -t xss.yaml -o xss-output

I will show you the process to find out the CNAME of the website.
The command used is: I had taken ads.google.com subdomain
dig ads.google.com CNAME


1) Found a subdomain with waf
2) ffuf -u subdomain/FUZZ -w wordlist -rate 5 -t 5
3) Found an endpoint which had rails root routing error and was disclosing all internal and admin endpoints.
p3(rails root routing error disclose all the internal endpoint)

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
That's how I discovered multiple üíâ SQL injection vulnerabilities! üë®üèª‚Äçüíª

While manually testing for XSS bug, I came across an SQL error by simply adding single and double quotes ( ' " ) at the end of the URL.
 Intrigued by this, I collected all the URLs from the Wayback Machine using the waybackurls tool and saved them into a text file. Using a one-liner,
 I tested a list of 10k URLs and ended up with some cool SQL vulnerabilities.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SQLi Oneliner:~
Using curl :
cat urls.txt | grep ".php" | sed 's/\.php.*/.php\//' | sort -u | sed s/$/%27%22%60/ | while read url do ; do curl --silent "$url" | grep -qs "You have an error in your SQL syntax" && echo -e "$url \e[1;32mVulnerable\e[0m" || echo -e "$url \e[1;31mNot Vulnerable\e[0m" ;done
========================
‚ù§Ô∏è Using httpx tool :
cat urls.txt | grep ".php" | sed 's/\.php.*/.php\//' | sort -u | sed s/$/%27%22%60/ | httpx -silent -ms "You have an error in your SQL syntax"


üíé Tip : Use SQLmap for further check
Tools:
waybackurls : https://lnkd.in/dGmUEnww
httpx : https://lnkd.in/g6n9bptE
SQLmap : https://lnkd.in/gMMSytMy

------------------------------------------------------------------------------------------------------------------------------------------------
Full Automated script with Nuclei + Paramspider = NucleiFuzzer
Please check script on this link: https://lnkd.in/dm3fmKwG

Tools included:
ParamSpider git clone https://github.com/devanshbatham/ParamSpider.git
Nuclei git clone https://github.com/projectdiscovery/nuclei.git

Templates:
Fuzzing Templates git clone https://github.com/projectdiscovery/fuzzing-templates.git

NucleiFuzzer is a powerful automation tool for detecting xss,sqli,ssrf,open-redirect..etc vulnerabilities in web applications

Usage: ./NucleiFuzzer.sh 

Options:
  -h, --help              Display help information
  -d, --domain <domain>   Domain to scan for xss,sqli,ssrf,open-redirect..etc vulnerabilities

Steps to Install:
git clone https://github.com/0xKayala/NucleiFuzzer.git
cd NucleiFuzzer
sudo chmod +x NucleiFuzzer.sh
./NucleiFuzzer.sh
---------------------------------------------------------------------------------------------------------------------------------------------------

You may find xss,sqli,ssrf,open-redirect vulnerabilities

1- site:*.target.com ext:php
2- echo http://sub.target.com | waybckurls | grep "\?" | uro | httpx -silent > parameters.txt
3- nuclei -l parameters.txt -t fuzzing-templates
----------------------------------------------------------------------------------------------------------------------------------------------------
